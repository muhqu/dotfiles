#!/bin/bash

if [[ "$TERM" = xterm-*color || "$TERM" = screen || "$TERM_PROGRAM" = DTerm ]]; then
    alias ls='ls -G'
    alias grep='grep --color=auto'
    export GREP_COLOR=32 # nice green!

    # Less Colors for Man Pages
    man () {
      (
        export LESS=-Xr
        export LESS_TERMCAP_mb=$'\e[01;31m'       # begin blinking
        export LESS_TERMCAP_md=$'\e[01;38;5;74m'  # begin bold
        export LESS_TERMCAP_me=$'\e[0m'           # end mode
        export LESS_TERMCAP_se=$'\e[0m'           # end standout-mode
        export LESS_TERMCAP_so=$'\e[38;5;246m'    # begin standout-mode - info box
        export LESS_TERMCAP_ue=$'\e[0m'           # end underline
        export LESS_TERMCAP_us=$'\e[04;38;5;146m' # begin underline
        $(which man) "$@"
      )
    }
fi

if [[ "$TERM" = xterm-*color || "$TERM" = screen ]]; then
    case $TERM in
      xterm*)
        TITLEBAR='\[\033]0;\h:\w\007\]'
        ;;
      *)
        TITLEBAR=""
        ;;
    esac
    
    PS1="${TITLEBAR}\[\033[34m\]╭─ \[\033[01;33m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\$(parse_branch)\[\033[01;31m\]\$(parse_aws_profile)\[\033[0m\]\[\033[1;36m\]\w\[\033[0m\]\n\[\033[34m\]╰─➤\[\033[0m\] "

    parse_aws_profile() {
      local _AWS_PROFILE_OLD="$_AWS_PROFILE"
      local _STACK_FILE="$HOME/.aws/current_stack.$$"
      if [[ -n "$AWS_DEFAULT_PROFILE" ]]; then
        _AWS_PROFILE="$AWS_DEFAULT_PROFILE"
        echo "$AWS_DEFAULT_PROFILE" > "$_STACK_FILE"
      elif [[ -n "$AWS_ACCESS_KEY_ID" && -n "$AWS_SECRET_ACCESS_KEY" ]]; then
        find $HOME/.aws/ -name 'current_stack*' -mtime +15m -delete # tidy up, delete expired files
        _SHA1=$(echo "$AWS_ACCESS_KEY_ID|$AWS_SECRET_ACCESS_KEY|$AWS_SECURITY_TOKEN" | openssl sha1)
        if [[ "$(cat "$_STACK_FILE.sha1" 2>/dev/null)" != "$_SHA1" ]]; then
          echo "$_SHA1" > "$_STACK_FILE.sha1"
          ( (aws sts get-caller-identity --output text --query 'Arn' | grep -Eo '/.*$') \
            || echo "token expired")> "$_STACK_FILE"
          # ( ( aws ec2 describe-tags --filters Name=resource-type,Values=vpc 2>/dev/null \
          #                         | jq -r '.Tags[] | select(.Key == "aws:cloudformation:stack-name") | .Value') \
          #            || echo "token expired") \
          #   > "$_STACK_FILE"
        fi
        _AWS_PROFILE="$(cat "$_STACK_FILE")"
      else
        _AWS_PROFILE=""
      fi
      if [ -n "$_AWS_PROFILE" ]; then
        if [[ "$_AWS_PROFILE" == *[Dd][Ee][Vv]* ]]; then
          _COLOR="0;32" # GREEN for Dev
          _ITERM_BG=$'\E]Ph093A1D\E\\'
        elif [[ "$_AWS_PROFILE" == *[Ss][Tt][Aa][Gg][Ee]* ]]; then
          _COLOR="38;5;75" # BLUE for Stage
          _ITERM_BG=$'\E]Ph0E0047\E\\'
        else
          _COLOR="0;31" # RED for anything else
          _ITERM_BG=$'\E]Ph660000\E\\'
        fi
        printf '\033[%smAWS(%s)\033[0m%s' "$_COLOR" "$_AWS_PROFILE" "$_ITERM_BG"
      elif [[ -f "$_STACK_FILE" ]]; then
        rm "$_STACK_FILE"
        echo -n $'\E]Ph000000\E\\'
      fi
    }

    parse_branch() {
       parse_svn_branch && parse_git_branch
    }

    parse_svn_branch() {
       (head -5 .svn/entries | tail -1 | sed 's!'`head -6 .svn/entries|tail -1`'!!') 2>/dev/null | sed -e 's/\/\(.*\)/SVN(\1)/'
    }

    parse_git_branch() {
       git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/GIT(\1)/'
    }
fi
