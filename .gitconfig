[user]
    name = Mathias Leppich
    email = mleppich@muhqu.de
    
[github]
    user = muhqu
	token = !security find-generic-password -gs \"GitHub Token\" 2>&1 >/dev/null | awk 'BEGIN{FS=\"\\\"\"}/^pass/{print $2}'

[alias]
    st = status -s
    ci = commit -v
    cii = commit -v --interactive
    co = checkout
    br = branch
    ri = rebase -i --autosquash
    ru = remote update
    rup = remote update --prune
    ruffwd = !git remote update && git ffwd
    rupffwd = !git remote update --prune && git ffwd

    change = codereview change
    gofmt = codereview gofmt
    mail = codereview mail
    pending = codereview pending
    submit = codereview submit
    sync = codereview sync
    
    ready = rebase -i --autosquash @{u}
    udiff = diff @{u}
    wdiff = diff --word-diff

    hvt = !git highest-version-tag
    highest-version-tag = "!f(){ git tag | perl -lne '@s=split(/[^0-9]+/, $_); shift @s if ($s[0] eq \"\"); printf \"%04s%04s%04s%04s %s\\n\",$s[0],$s[1],$s[2],$s[3],$_' | sort -r | awk '{print $2}' | head -$(( 1 + ${1:-0})) | tail -1;};f"
    merge-hvt = "!git merge $(git hvt)"

    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"

    permission-reset = !git diff -p -R | grep -E \"^(diff|(old|new) mode)\" | git apply
	unstash = !git stash show -p | git apply -3 && git stash drop
    fixup = "!sh -c 'git commit -m \"fixup! $(git log -1 --format='\\''%s'\\'' $@)\"' -"
    squash = "!sh -c 'git commit -m \"squash! $(git log -1 --format='\\''%s'\\'' $@)\"' -"
    
    stash-list = "!git stash list | while read line; do   ref=${line%%:*};   prefix=$(test $(git diff $ref | wc -l) == \"0\" && echo \"âœ”  \" || echo \"   \");   echo \"$prefix$line\"; done"

    subl = "!f(){ FILE=\"$GIT_PREFIX$2\"; if [ -z \"$2\" -a -n \"$DTERM_SELECTED_FILES\" ]; then FILE=\".${DTERM_SELECTED_FILES/$PWD/}\"; fi; git cat-file -p \"$1:$FILE\" | subl -n; };f"

    wip-push = "!f(){ if git log --format=%B -n 1 | grep WIP >/dev/null 2>&1; then git commit -a --amend -C HEAD && git push -f; else echo >&2 \"Error: HEAD is not a WIP commit\"; fi; };f"

    # via http://stackoverflow.com/a/4991675/450383
    oldest-ancestor = !bash -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1' -
    branchdiff = "!f(){ git diff $(git oldest-ancestor ${1:-master} ${2:-HEAD})..${2:-HEAD}; };f"
    branchlog = "!f(){ git log $(git oldest-ancestor ${1:-master} ${2:-HEAD})..${2:-HEAD}; };f"
    branchgraph = "!f(){ git log --oneline --decorate --graph --boundary --pretty='format:%C(auto)%h%d %ar%n%an: %C(cyan)%s%Creset%n' $(git oldest-ancestor ${1:-master} ${2:-HEAD})..${2:-HEAD}; };f"
    bl = !git branchlog
    bg = !git branchgraph
 
    first-remote-name = "!git config --list --local | awk 'BEGIN{FS=\".\"}/^remote/{print $2; exit}' || echo origin"
    fetch-pr = "!f(){ [ -z "$1" ] && echo >&2 "Usage: git fetch-pr NUMBER [REMOTE]" || git fetch ${2:-$(git first-remote-name)} pull/${1}/head:pr-${1}; };f"
    new-pr = "!f(){ local U="$(git github-url)"; local B="$(git rev-parse --abbrev-ref HEAD)"; echo "U:$U     B:$B"; if [ -z "$U" ]; then echo >&2 "Error: Missing Github URL."; exit 1; fi; git push --set-upstream ${1:-$(git first-remote-name)} HEAD && open "${U}/compare/${B}?expand=1"; };f"
    github-url = "!f(){ (git config --get \"remote.$USER.url\" || git config --get \"remote.$(git first-remote-name).url\") | jq -R 'capture(\"git@(?<host>[^:/]+):(?<org>[^/]+)/(?<repo>[^/]+?).git\") | \"https://\\(.host)/\\(.org)/\\(.repo)\" ' -r; };f"
    github = "!f(){ open "$(git github-url)"; };f"

[core]
    excludesfile = ~/.gitignore-global
    hooksPath = ~/.githooks

[push]
    default = simple

[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto

[color "branch"]
    current = cyan bold
    remote = green

[color "decorate"]
    HEAD = cyan bold
    branch = green bold
    remoteBranch = green
    tag = yellow bold

[mergetool "subl"] 
    cmd = subl "$PWD/$MERGED"
    trustExitCode = false
    
[mergetool "p4merge"]
    cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
    keepTemporaries = false
    trustExitCode = false
    
[mergetool]
    keepBackup = false
    prompt = false

[merge] 
	tool = bc3
[diff]
	tool = bc3
[difftool]
	prompt = false
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[git-up "rebase"]
	auto = false

[init]
	templatedir = ~/.git_template

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true

[http]
	cookiefile = $HOME/.gitcookies

[url "git@github.com:"]
    insteadOf = git://github.com/
    insteadOf = https://github.com/

[url "git@gist.github.com:"]
    insteadOf = https://gist.github.com/
    insteadOf = git://gist.github.com/

